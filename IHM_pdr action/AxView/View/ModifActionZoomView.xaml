<UserControl x:Class="AxView.View.ModifActionZoomView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:res="clr-namespace:AxLanguage;assembly=AxLanguage"
             MinWidth="1228" MinHeight="550">
    <UserControl.Resources>
        <SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
        <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
        <Style x:Key="EmptyCheckBoxFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckRadioFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Ellipse x:Name="ellipse" Fill="#FF17E032" Height="20" Stroke="Black" Width="20"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Fill" TargetName="ellipse" Value="#FFEC0E0E"/>
                            </Trigger>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                                <Setter Property="Padding" Value="4,0,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.927*"/>
            <RowDefinition Height="70"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.927*" />
                <RowDefinition Height="100" />
            </Grid.RowDefinitions>
            <ItemsControl ItemsSource="{Binding CiblesGauche}" Grid.Row="0" Height="400" Width="1228">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <CheckBox IsChecked="{Binding Selected}" Style="{DynamicResource CheckBoxStyle1}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left" Value="{Binding XAffichage}" />
                        <Setter Property="Canvas.Top" Value="{Binding YAffichage}" />
                        <Setter Property="Canvas.Width" Value="20" />
                        <Setter Property="Canvas.Height" Value="20" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
            <ItemsControl ItemsSource="{Binding CiblesDroite}" Grid.Row="0" Height="400" Width="1228">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <CheckBox IsChecked="{Binding Selected}" Style="{DynamicResource CheckBoxStyle1}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left" Value="{Binding XAffichage}" />
                        <Setter Property="Canvas.Top" Value="{Binding YAffichage}" />
                        <Setter Property="Canvas.Width" Value="20" />
                        <Setter Property="Canvas.Height" Value="20" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Vertical" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,0,20">
                    <RadioButton Content="Amplitude Articulaire avec aide" GroupName="ChoixAmplitude" Command="{Binding ChangerChoixCommand}" CommandParameter="0" IsChecked="True" />
                    <RadioButton Content="Amplitude Articulaire" GroupName="ChoixAmplitude" Command="{Binding ChangerChoixCommand}" CommandParameter="1" IsChecked="false" />
                    <RadioButton Content="Défaut" GroupName="ChoixAmplitude" Command="{Binding ChangerChoixCommand}" CommandParameter="2" IsChecked="false" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="270,0,0,0">
                    <Slider x:Name="SliderGauche" Minimum="1" Maximum="10" Width="250" MinWidth="250" MaxWidth="250" TickFrequency="1" IsSnapToTickEnabled="True" Value="{Binding RepetitionGauche}" />
                    <Label Content="{Binding ElementName=SliderGauche, Path=Value}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,170,0">
                    <Slider x:Name="SliderDroit" Minimum="1" Maximum="10" Width="250" MinWidth="250" MaxWidth="250" TickFrequency="1" IsSnapToTickEnabled="True" Value="{Binding RepetitionDroit}" />
                    <Label Content="{Binding ElementName=SliderDroit, Path=Value}" />
                </StackPanel>
            </Grid>
        </Grid>
        
        <!--Boutons de navigation-->
        <Border BorderBrush="Black" BorderThickness="0,1,0,0" Grid.Row="1">
            <StackPanel Orientation="Horizontal" d:LayoutOverrides="Height" Margin="0" HorizontalAlignment="Right">
                <Button Content="{x:Static res:Languages.REAplan_Precedent}" FontSize="20" Margin="10,0" Height="50" Width="150" Padding="0" Command="{Binding PreviousViewModelCommand}"/>
                <Button Content="{x:Static res:Languages.REAplan_Suivant}" Command="{Binding NextViewModelCommand}" FontSize="20" Margin="10,0" Height="50" Width="150" Padding="0" />
                <Button Content="{x:Static res:Languages.REAplan_Accueil}" FontSize="20" Margin="10,0" Height="50" Width="150" Padding="0"  Command="{Binding HomeViewModelCommand}"/>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
